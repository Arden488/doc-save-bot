import { getData, setData } from "../services/appData.js";
import { getMessageType } from "../utils/message.js";
import { processFile } from "./file.js";
import { handleSend } from "./send.js";

let step = 0;

function start(message, bot) {
  console.log("start 1");
  setData("status", "SAVE_PROMPT");
  console.log("start 2");
  console.log(bot, message.chat.id);
  bot.sendMessage(message.chat.id, "–û–ø–∏—à–∏, —á—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—à—å");
  console.log("start 3");
  setData("step", 1);
}

function setDescription(message, bot) {
  console.log("setDescription 0");
  if (!message.text) {
    bot.sendMessage(
      message.chat.id,
      "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –Ω—É–∂–µ–Ω –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç"
    );
    return;
  }

  console.log("setDescription 1");
  setData("description", message.text);
  console.log("setDescription 2");
  console.log(bot, message);
  bot.sendMessage(
    message.chat.id,
    "–û–∫, —Ç–µ–ø–µ—Ä—å –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏ —Ñ–∞–π–ª"
  );
  console.log("setDescription 3");
  setData("step", 2);
}

async function setFileOrLink(message, bot) {
  const messageType = getMessageType(message);
  let link = null;

  console.log(messageType);

  if (messageType !== "file" && messageType !== "link") {
    bot.sendMessage(message.chat.id, "–ú–Ω–µ –Ω—É–∂–µ–Ω —Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫–∞");
    return;
  }

  if (messageType === "file") {
    link = await processFile(message.document);
  } else if (messageType === "link") {
    link = message.text;
  }

  setData("link", link);

  bot.sendMessage(
    message.chat.id,
    "–°–ø–∞—Å–∏–±–æ, –≤—Å–µ —É—à–ª–æ –≤ –±–∞–∑—Éüëåüèª –î–∞ –ø—Ä–∏–±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π –ø–æ–Ω—è—Ç–Ω–æ—Å—Ç—å"
  );
}

function handleSavePrompt(message, bot) {
  const step = getData("step");
  console.log(step);
  switch (step) {
    case 0:
      start(message, bot);
      break;
    case 1:
      setDescription(message, bot);
      break;
    case 2:
      setFileOrLink(message, bot);
      handleSend();
      break;
  }

  console.log("handleSavePrompt");
}

export default handleSavePrompt;
